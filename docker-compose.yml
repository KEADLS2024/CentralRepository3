version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"     
      - "15672:15672"   
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
  order-app:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    depends_on:
      - order-db
      - rabbitmq
    ports:
      - "8080:80"
    environment:
      - ConnectionStrings__DefaultConnection=Server=centralrepository3-order-db-1;Database=OrderServiceDB;User=sa;Password=Qwerty123!;TrustServerCertificate=True;
    networks:
      - app-network
  order-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Qwerty123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql
      - ./OrderService/init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - /bin/bash
      - -c
      - |
        /opt/mssql/bin/sqlservr & sleep 30 && /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Qwerty123!' -d master -i /docker-entrypoint-initdb.d/init.sql
        wait
    networks:
      - app-network
  catalog-app:
    build:
      context: ./DLS_Catalog_Service_3.0/DLS_Catalog_Service_3.0
      dockerfile: Dockerfile
    ports:
      - "8070:80"
      - "8443:7026"
    depends_on:
      - mymongodb
      - rabbitmq
    networks:
      - app-network
    environment:
      - AllowedHosts=*
      - MongoDbSettings__ConnectionString=mongodb://mymongodb:27017
      - MongoDbSettings__DatabaseName=DLS
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__UserName=user
      - RabbitMQSettings__Password=password
  mymongodb:
    build:
      context: ./DLS_Catalog_Service_3.0
      dockerfile: Dockerfile.mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
  user-db:
    image: mysql:8.0
    container_name: my_mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: UserServiceDB
    ports:
      - "3307:3306"
    volumes:
      - db_data1:/var/lib/mysql
      - ./UserService/UserService/init.sql:/docker-entrypoint-initdb.d/init-user.sql
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: ["sh", "-c", "docker-entrypoint.sh mysqld & sleep 30 && mysql -uroot -p1234 UserServiceDB < /docker-entrypoint-initdb.d/init-user.sql && wait"]
  user-app:
    build:
      context: ./UserService/UserService
      dockerfile: Dockerfile
    depends_on:
      - user-db
      - rabbitmq
    ports:
      - "8060:80"
    environment:
      ConnectionStrings__DefaultConnection: "Server=my_mysql_db;Database=UserServiceDB;Uid=root;Pwd=1234;Port=3306;"
    networks:
      - app-network
    restart: always
  email-app:
    build:
      context: ./EmailService
      dockerfile: ./EmailService/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - app-network
  payment-app:
    build:
      context: ./PaymentService3
      dockerfile: ./PaymentService3/Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "8050:80"
    networks:
      - app-network
    restart: always

volumes:
  db_data:
  db_data1:
  rabbitmq_data:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge