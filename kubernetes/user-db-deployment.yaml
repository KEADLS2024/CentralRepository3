apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o ./kubernetes/
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: user-db
  name: user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o ./kubernetes/
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/centralrepository3-app-network: "true"
        io.kompose.service: user-db
    spec:
      containers:
        - command:
            - sh
            - -c
            - docker-entrypoint.sh mysqld & sleep 30 && mysql -uroot -p1234 UserServiceDB < /docker-entrypoint-initdb.d/init-user.sql && wait
          env:
            - name: MYSQL_DATABASE
              value: UserServiceDB
            - name: MYSQL_ROOT_PASSWORD
              value: "1234"
          image: mysql:8.0
          livenessProbe:
            exec:
              command:
                - mysqladmin ping -h localhost
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: my-mysql-db
          ports:
            - containerPort: 3306
              hostPort: 3307
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-data1
            - mountPath: /docker-entrypoint-initdb.d/init-user.sql
              name: user-db-cm1
              subPath: init-user.sql
      restartPolicy: Always
      volumes:
        - name: db-data1
          persistentVolumeClaim:
            claimName: db-data1
        - configMap:
            items:
              - key: init.sql
                path: init-user.sql
            name: user-db-cm1
          name: user-db-cm1
